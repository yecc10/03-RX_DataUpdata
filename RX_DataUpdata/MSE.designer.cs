#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RX_DataUpdata
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ALTDataBase")]
	public partial class MSEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBoardData(BoardData instance);
    partial void UpdateBoardData(BoardData instance);
    partial void DeleteBoardData(BoardData instance);
    partial void InsertSportData(SportData instance);
    partial void UpdateSportData(SportData instance);
    partial void DeleteSportData(SportData instance);
    #endregion
		
		public MSEDataContext() : 
				base(global::RX_DataUpdata.Properties.Settings.Default.ALTDataBaseConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public MSEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExperienceView> ExperienceView
		{
			get
			{
				return this.GetTable<ExperienceView>();
			}
		}
		
		public System.Data.Linq.Table<Board_SportData> Board_SportData
		{
			get
			{
				return this.GetTable<Board_SportData>();
			}
		}
		
		public System.Data.Linq.Table<BoardData> BoardData
		{
			get
			{
				return this.GetTable<BoardData>();
			}
		}
		
		public System.Data.Linq.Table<SportData> SportData
		{
			get
			{
				return this.GetTable<SportData>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdataExp")]
		public int UpdataExp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b1t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b2t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b3t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(50)")] string b3m, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PoleDim", DbType="Float")] System.Nullable<double> poleDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Presstime", DbType="Float")] System.Nullable<double> presstime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weldele", DbType="Float")] System.Nullable<double> weldele, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> weldtime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keeptime", DbType="Float")] System.Nullable<double> keeptime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pressure", DbType="Float")] System.Nullable<double> pressure, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SportDim", DbType="Float")] System.Nullable<double> sportDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RongheDim", DbType="Float")] System.Nullable<double> rongheDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(255)")] string remarks)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid, b1t, b2t, b3t, b3m, poleDim, presstime, weldele, weldtime, keeptime, pressure, sportDim, rongheDim, remarks);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SerchExp")]
		public ISingleResult<SerchExpResult> SerchExp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> b1t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> b2t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> b3t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(50)")] ref string b3m, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PoleDim", DbType="Float")] ref System.Nullable<double> poleDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Presstime", DbType="Float")] ref System.Nullable<double> presstime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weldele", DbType="Float")] ref System.Nullable<double> weldele, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] ref System.Nullable<double> weldtime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keeptime", DbType="Float")] ref System.Nullable<double> keeptime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pressure", DbType="Float")] ref System.Nullable<double> pressure, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SportDim", DbType="Float")] ref System.Nullable<double> sportDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RongheDim", DbType="Float")] ref System.Nullable<double> rongheDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(255)")] ref string remarks)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid, b1t, b2t, b3t, b3m, poleDim, presstime, weldele, weldtime, keeptime, pressure, sportDim, rongheDim, remarks);
			b1t = ((System.Nullable<double>)(result.GetParameterValue(1)));
			b2t = ((System.Nullable<double>)(result.GetParameterValue(2)));
			b3t = ((System.Nullable<double>)(result.GetParameterValue(3)));
			b3m = ((string)(result.GetParameterValue(4)));
			poleDim = ((System.Nullable<double>)(result.GetParameterValue(5)));
			presstime = ((System.Nullable<double>)(result.GetParameterValue(6)));
			weldele = ((System.Nullable<double>)(result.GetParameterValue(7)));
			weldtime = ((System.Nullable<double>)(result.GetParameterValue(8)));
			keeptime = ((System.Nullable<double>)(result.GetParameterValue(9)));
			pressure = ((System.Nullable<double>)(result.GetParameterValue(10)));
			sportDim = ((System.Nullable<double>)(result.GetParameterValue(11)));
			rongheDim = ((System.Nullable<double>)(result.GetParameterValue(12)));
			remarks = ((string)(result.GetParameterValue(13)));
			return ((ISingleResult<SerchExpResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NewSportData")]
		public ISingleResult<NewSportDataResult> NewSportData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string bid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string pid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PoleDim", DbType="Float")] System.Nullable<double> poleDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Presstime", DbType="Float")] System.Nullable<double> presstime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weldele", DbType="Float")] System.Nullable<double> weldele, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> weldtime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keeptime", DbType="Float")] System.Nullable<double> keeptime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pressure", DbType="Float")] System.Nullable<double> pressure, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SportDim", DbType="Float")] System.Nullable<double> sportDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RongheDim", DbType="Float")] System.Nullable<double> rongheDim, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(255)")] string remarks, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> zhanjian, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FistPoint", DbType="Bit")] System.Nullable<bool> fistPoint, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndPoint", DbType="Bit")] System.Nullable<bool> endPoint, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Ret", DbType="Int")] ref System.Nullable<int> ret)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bid, pid, poleDim, presstime, weldele, weldtime, keeptime, pressure, sportDim, rongheDim, remarks, zhanjian, fistPoint, endPoint, ret);
			ret = ((System.Nullable<int>)(result.GetParameterValue(14)));
			return ((ISingleResult<NewSportDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NewExp")]
		public ISingleResult<NewExpResult> NewExp(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bid", DbType="NVarChar(128)")] string bid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string pid, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b1t, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b2t, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b3t, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(50)")] string b3m, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="PoleDim", DbType="Float")] System.Nullable<double> poleDim, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Presstime", DbType="Float")] System.Nullable<double> presstime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Weldele", DbType="Float")] System.Nullable<double> weldele, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> weldtime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keeptime", DbType="Float")] System.Nullable<double> keeptime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pressure", DbType="Float")] System.Nullable<double> pressure, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="SportDim", DbType="Float")] System.Nullable<double> sportDim, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="RongheDim", DbType="Float")] System.Nullable<double> rongheDim, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remarks", DbType="NVarChar(255)")] string remarks, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Zaojian", DbType="Bit")] System.Nullable<bool> zaojian, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FistPoint", DbType="Bit")] System.Nullable<bool> fistPoint, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndPoint", DbType="Bit")] System.Nullable<bool> endPoint, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rnum1", DbType="Int")] ref System.Nullable<int> rnum1)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bid, pid, b1t, b2t, b3t, b3m, poleDim, presstime, weldele, weldtime, keeptime, pressure, sportDim, rongheDim, remarks, zaojian, fistPoint, endPoint, rnum1);
			rnum1 = ((System.Nullable<int>)(result.GetParameterValue(18)));
			return ((ISingleResult<NewExpResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.NewBoardData")]
		public ISingleResult<NewBoardDataResult> NewBoardData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string bid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b1t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b2t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> b3t, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(50)")] string b3m)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bid, b1t, b2t, b3t, b3m);
			return ((ISingleResult<NewBoardDataResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienceView")]
	public partial class ExperienceView
	{
		
		private string _ID;
		
		private string _BID;
		
		private string _PID;
		
		private string _B1Materal;
		
		private System.Nullable<double> _B1Thinkness;
		
		private string _B2Materal;
		
		private System.Nullable<double> _B2Thinkness;
		
		private string _B3Materal;
		
		private System.Nullable<double> _B3Thinkness;
		
		private System.Nullable<double> _DJ电极端面直径;
		
		private System.Nullable<double> _JY加压时间;
		
		private System.Nullable<double> _HJ焊接电流;
		
		private System.Nullable<double> _HJ焊接时间;
		
		private System.Nullable<double> _WC维持时间;
		
		private System.Nullable<double> _DJ电极压力;
		
		private System.Nullable<double> _HD焊点直径;
		
		private System.Nullable<double> _HH熔核直径;
		
		private System.Nullable<double> _TotalThinkness;
		
		private string _BZ备注;
		
		private System.Nullable<System.TimeSpan> _TDate;
		
		public ExperienceView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="VarChar(128)")]
		public string BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this._BID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="VarChar(128)")]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B1Materal", DbType="NChar(50)")]
		public string B1Materal
		{
			get
			{
				return this._B1Materal;
			}
			set
			{
				if ((this._B1Materal != value))
				{
					this._B1Materal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B1Thinkness", DbType="Float")]
		public System.Nullable<double> B1Thinkness
		{
			get
			{
				return this._B1Thinkness;
			}
			set
			{
				if ((this._B1Thinkness != value))
				{
					this._B1Thinkness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2Materal", DbType="NChar(50)")]
		public string B2Materal
		{
			get
			{
				return this._B2Materal;
			}
			set
			{
				if ((this._B2Materal != value))
				{
					this._B2Materal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2Thinkness", DbType="Float")]
		public System.Nullable<double> B2Thinkness
		{
			get
			{
				return this._B2Thinkness;
			}
			set
			{
				if ((this._B2Thinkness != value))
				{
					this._B2Thinkness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3Materal", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string B3Materal
		{
			get
			{
				return this._B3Materal;
			}
			set
			{
				if ((this._B3Materal != value))
				{
					this._B3Materal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3Thinkness", DbType="Float")]
		public System.Nullable<double> B3Thinkness
		{
			get
			{
				return this._B3Thinkness;
			}
			set
			{
				if ((this._B3Thinkness != value))
				{
					this._B3Thinkness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极端面直径", DbType="Float")]
		public System.Nullable<double> DJ电极端面直径
		{
			get
			{
				return this._DJ电极端面直径;
			}
			set
			{
				if ((this._DJ电极端面直径 != value))
				{
					this._DJ电极端面直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JY加压时间", DbType="Float")]
		public System.Nullable<double> JY加压时间
		{
			get
			{
				return this._JY加压时间;
			}
			set
			{
				if ((this._JY加压时间 != value))
				{
					this._JY加压时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接电流", DbType="Float")]
		public System.Nullable<double> HJ焊接电流
		{
			get
			{
				return this._HJ焊接电流;
			}
			set
			{
				if ((this._HJ焊接电流 != value))
				{
					this._HJ焊接电流 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接时间", DbType="Float")]
		public System.Nullable<double> HJ焊接时间
		{
			get
			{
				return this._HJ焊接时间;
			}
			set
			{
				if ((this._HJ焊接时间 != value))
				{
					this._HJ焊接时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WC维持时间", DbType="Float")]
		public System.Nullable<double> WC维持时间
		{
			get
			{
				return this._WC维持时间;
			}
			set
			{
				if ((this._WC维持时间 != value))
				{
					this._WC维持时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极压力", DbType="Float")]
		public System.Nullable<double> DJ电极压力
		{
			get
			{
				return this._DJ电极压力;
			}
			set
			{
				if ((this._DJ电极压力 != value))
				{
					this._DJ电极压力 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD焊点直径", DbType="Float")]
		public System.Nullable<double> HD焊点直径
		{
			get
			{
				return this._HD焊点直径;
			}
			set
			{
				if ((this._HD焊点直径 != value))
				{
					this._HD焊点直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HH熔核直径", DbType="Float")]
		public System.Nullable<double> HH熔核直径
		{
			get
			{
				return this._HH熔核直径;
			}
			set
			{
				if ((this._HH熔核直径 != value))
				{
					this._HH熔核直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalThinkness", DbType="Float")]
		public System.Nullable<double> TotalThinkness
		{
			get
			{
				return this._TotalThinkness;
			}
			set
			{
				if ((this._TotalThinkness != value))
				{
					this._TotalThinkness = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BZ备注", DbType="NVarChar(255)")]
		public string BZ备注
		{
			get
			{
				return this._BZ备注;
			}
			set
			{
				if ((this._BZ备注 != value))
				{
					this._BZ备注 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDate", DbType="Time")]
		public System.Nullable<System.TimeSpan> TDate
		{
			get
			{
				return this._TDate;
			}
			set
			{
				if ((this._TDate != value))
				{
					this._TDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Board&SportData]")]
	public partial class Board_SportData
	{
		
		private string _BID;
		
		private string _PID;
		
		public Board_SportData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this._BID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoardData")]
	public partial class BoardData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _BID;
		
		private string _B1Materal;
		
		private System.Nullable<double> _B1Thinkness;
		
		private string _B2Materal;
		
		private System.Nullable<double> _B2Thinkness;
		
		private string _B3Materal;
		
		private System.Nullable<double> _B3Thinkness;
		
		private System.Nullable<double> _TotalThinkness;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnBIDChanging(string value);
    partial void OnBIDChanged();
    partial void OnB1MateralChanging(string value);
    partial void OnB1MateralChanged();
    partial void OnB1ThinknessChanging(System.Nullable<double> value);
    partial void OnB1ThinknessChanged();
    partial void OnB2MateralChanging(string value);
    partial void OnB2MateralChanged();
    partial void OnB2ThinknessChanging(System.Nullable<double> value);
    partial void OnB2ThinknessChanged();
    partial void OnB3MateralChanging(string value);
    partial void OnB3MateralChanged();
    partial void OnB3ThinknessChanging(System.Nullable<double> value);
    partial void OnB3ThinknessChanged();
    partial void OnTotalThinknessChanging(System.Nullable<double> value);
    partial void OnTotalThinknessChanged();
    #endregion
		
		public BoardData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BID", DbType="VarChar(128)")]
		public string BID
		{
			get
			{
				return this._BID;
			}
			set
			{
				if ((this._BID != value))
				{
					this.OnBIDChanging(value);
					this.SendPropertyChanging();
					this._BID = value;
					this.SendPropertyChanged("BID");
					this.OnBIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B1Materal", DbType="NChar(50)")]
		public string B1Materal
		{
			get
			{
				return this._B1Materal;
			}
			set
			{
				if ((this._B1Materal != value))
				{
					this.OnB1MateralChanging(value);
					this.SendPropertyChanging();
					this._B1Materal = value;
					this.SendPropertyChanged("B1Materal");
					this.OnB1MateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B1Thinkness", DbType="Float")]
		public System.Nullable<double> B1Thinkness
		{
			get
			{
				return this._B1Thinkness;
			}
			set
			{
				if ((this._B1Thinkness != value))
				{
					this.OnB1ThinknessChanging(value);
					this.SendPropertyChanging();
					this._B1Thinkness = value;
					this.SendPropertyChanged("B1Thinkness");
					this.OnB1ThinknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2Materal", DbType="NChar(50)")]
		public string B2Materal
		{
			get
			{
				return this._B2Materal;
			}
			set
			{
				if ((this._B2Materal != value))
				{
					this.OnB2MateralChanging(value);
					this.SendPropertyChanging();
					this._B2Materal = value;
					this.SendPropertyChanged("B2Materal");
					this.OnB2MateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B2Thinkness", DbType="Float")]
		public System.Nullable<double> B2Thinkness
		{
			get
			{
				return this._B2Thinkness;
			}
			set
			{
				if ((this._B2Thinkness != value))
				{
					this.OnB2ThinknessChanging(value);
					this.SendPropertyChanging();
					this._B2Thinkness = value;
					this.SendPropertyChanged("B2Thinkness");
					this.OnB2ThinknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3Materal", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string B3Materal
		{
			get
			{
				return this._B3Materal;
			}
			set
			{
				if ((this._B3Materal != value))
				{
					this.OnB3MateralChanging(value);
					this.SendPropertyChanging();
					this._B3Materal = value;
					this.SendPropertyChanged("B3Materal");
					this.OnB3MateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B3Thinkness", DbType="Float")]
		public System.Nullable<double> B3Thinkness
		{
			get
			{
				return this._B3Thinkness;
			}
			set
			{
				if ((this._B3Thinkness != value))
				{
					this.OnB3ThinknessChanging(value);
					this.SendPropertyChanging();
					this._B3Thinkness = value;
					this.SendPropertyChanged("B3Thinkness");
					this.OnB3ThinknessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalThinkness", DbType="Float")]
		public System.Nullable<double> TotalThinkness
		{
			get
			{
				return this._TotalThinkness;
			}
			set
			{
				if ((this._TotalThinkness != value))
				{
					this.OnTotalThinknessChanging(value);
					this.SendPropertyChanging();
					this._TotalThinkness = value;
					this.SendPropertyChanged("TotalThinkness");
					this.OnTotalThinknessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SportData")]
	public partial class SportData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _PID;
		
		private System.Nullable<double> _DJ电极端面直径;
		
		private System.Nullable<double> _JY加压时间;
		
		private System.Nullable<double> _HJ焊接电流;
		
		private System.Nullable<double> _HJ焊接时间;
		
		private System.Nullable<double> _WC维持时间;
		
		private System.Nullable<double> _DJ电极压力;
		
		private System.Nullable<double> _HD焊点直径;
		
		private System.Nullable<double> _HH熔核直径;
		
		private System.Nullable<double> _ZH总厚度;
		
		private string _BZ备注;
		
		private System.Nullable<System.DateTime> _TDate;
		
		private System.Nullable<bool> _ZhanJian;
		
		private System.Nullable<bool> _FistPoint;
		
		private System.Nullable<bool> _EndPoint;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnPIDChanging(string value);
    partial void OnPIDChanged();
    partial void OnDJ电极端面直径Changing(System.Nullable<double> value);
    partial void OnDJ电极端面直径Changed();
    partial void OnJY加压时间Changing(System.Nullable<double> value);
    partial void OnJY加压时间Changed();
    partial void OnHJ焊接电流Changing(System.Nullable<double> value);
    partial void OnHJ焊接电流Changed();
    partial void OnHJ焊接时间Changing(System.Nullable<double> value);
    partial void OnHJ焊接时间Changed();
    partial void OnWC维持时间Changing(System.Nullable<double> value);
    partial void OnWC维持时间Changed();
    partial void OnDJ电极压力Changing(System.Nullable<double> value);
    partial void OnDJ电极压力Changed();
    partial void OnHD焊点直径Changing(System.Nullable<double> value);
    partial void OnHD焊点直径Changed();
    partial void OnHH熔核直径Changing(System.Nullable<double> value);
    partial void OnHH熔核直径Changed();
    partial void OnZH总厚度Changing(System.Nullable<double> value);
    partial void OnZH总厚度Changed();
    partial void OnBZ备注Changing(string value);
    partial void OnBZ备注Changed();
    partial void OnTDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTDateChanged();
    partial void OnZhanJianChanging(System.Nullable<bool> value);
    partial void OnZhanJianChanged();
    partial void OnFistPointChanging(System.Nullable<bool> value);
    partial void OnFistPointChanged();
    partial void OnEndPointChanging(System.Nullable<bool> value);
    partial void OnEndPointChanged();
    #endregion
		
		public SportData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="VarChar(128)")]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极端面直径", DbType="Float")]
		public System.Nullable<double> DJ电极端面直径
		{
			get
			{
				return this._DJ电极端面直径;
			}
			set
			{
				if ((this._DJ电极端面直径 != value))
				{
					this.OnDJ电极端面直径Changing(value);
					this.SendPropertyChanging();
					this._DJ电极端面直径 = value;
					this.SendPropertyChanged("DJ电极端面直径");
					this.OnDJ电极端面直径Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JY加压时间", DbType="Float")]
		public System.Nullable<double> JY加压时间
		{
			get
			{
				return this._JY加压时间;
			}
			set
			{
				if ((this._JY加压时间 != value))
				{
					this.OnJY加压时间Changing(value);
					this.SendPropertyChanging();
					this._JY加压时间 = value;
					this.SendPropertyChanged("JY加压时间");
					this.OnJY加压时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接电流", DbType="Float")]
		public System.Nullable<double> HJ焊接电流
		{
			get
			{
				return this._HJ焊接电流;
			}
			set
			{
				if ((this._HJ焊接电流 != value))
				{
					this.OnHJ焊接电流Changing(value);
					this.SendPropertyChanging();
					this._HJ焊接电流 = value;
					this.SendPropertyChanged("HJ焊接电流");
					this.OnHJ焊接电流Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接时间", DbType="Float")]
		public System.Nullable<double> HJ焊接时间
		{
			get
			{
				return this._HJ焊接时间;
			}
			set
			{
				if ((this._HJ焊接时间 != value))
				{
					this.OnHJ焊接时间Changing(value);
					this.SendPropertyChanging();
					this._HJ焊接时间 = value;
					this.SendPropertyChanged("HJ焊接时间");
					this.OnHJ焊接时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WC维持时间", DbType="Float")]
		public System.Nullable<double> WC维持时间
		{
			get
			{
				return this._WC维持时间;
			}
			set
			{
				if ((this._WC维持时间 != value))
				{
					this.OnWC维持时间Changing(value);
					this.SendPropertyChanging();
					this._WC维持时间 = value;
					this.SendPropertyChanged("WC维持时间");
					this.OnWC维持时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极压力", DbType="Float")]
		public System.Nullable<double> DJ电极压力
		{
			get
			{
				return this._DJ电极压力;
			}
			set
			{
				if ((this._DJ电极压力 != value))
				{
					this.OnDJ电极压力Changing(value);
					this.SendPropertyChanging();
					this._DJ电极压力 = value;
					this.SendPropertyChanged("DJ电极压力");
					this.OnDJ电极压力Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD焊点直径", DbType="Float")]
		public System.Nullable<double> HD焊点直径
		{
			get
			{
				return this._HD焊点直径;
			}
			set
			{
				if ((this._HD焊点直径 != value))
				{
					this.OnHD焊点直径Changing(value);
					this.SendPropertyChanging();
					this._HD焊点直径 = value;
					this.SendPropertyChanged("HD焊点直径");
					this.OnHD焊点直径Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HH熔核直径", DbType="Float")]
		public System.Nullable<double> HH熔核直径
		{
			get
			{
				return this._HH熔核直径;
			}
			set
			{
				if ((this._HH熔核直径 != value))
				{
					this.OnHH熔核直径Changing(value);
					this.SendPropertyChanging();
					this._HH熔核直径 = value;
					this.SendPropertyChanged("HH熔核直径");
					this.OnHH熔核直径Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZH总厚度", DbType="Float")]
		public System.Nullable<double> ZH总厚度
		{
			get
			{
				return this._ZH总厚度;
			}
			set
			{
				if ((this._ZH总厚度 != value))
				{
					this.OnZH总厚度Changing(value);
					this.SendPropertyChanging();
					this._ZH总厚度 = value;
					this.SendPropertyChanged("ZH总厚度");
					this.OnZH总厚度Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BZ备注", DbType="NVarChar(255)")]
		public string BZ备注
		{
			get
			{
				return this._BZ备注;
			}
			set
			{
				if ((this._BZ备注 != value))
				{
					this.OnBZ备注Changing(value);
					this.SendPropertyChanging();
					this._BZ备注 = value;
					this.SendPropertyChanged("BZ备注");
					this.OnBZ备注Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TDate
		{
			get
			{
				return this._TDate;
			}
			set
			{
				if ((this._TDate != value))
				{
					this.OnTDateChanging(value);
					this.SendPropertyChanging();
					this._TDate = value;
					this.SendPropertyChanged("TDate");
					this.OnTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZhanJian", DbType="Bit")]
		public System.Nullable<bool> ZhanJian
		{
			get
			{
				return this._ZhanJian;
			}
			set
			{
				if ((this._ZhanJian != value))
				{
					this.OnZhanJianChanging(value);
					this.SendPropertyChanging();
					this._ZhanJian = value;
					this.SendPropertyChanged("ZhanJian");
					this.OnZhanJianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FistPoint", DbType="Bit")]
		public System.Nullable<bool> FistPoint
		{
			get
			{
				return this._FistPoint;
			}
			set
			{
				if ((this._FistPoint != value))
				{
					this.OnFistPointChanging(value);
					this.SendPropertyChanging();
					this._FistPoint = value;
					this.SendPropertyChanged("FistPoint");
					this.OnFistPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndPoint", DbType="Bit")]
		public System.Nullable<bool> EndPoint
		{
			get
			{
				return this._EndPoint;
			}
			set
			{
				if ((this._EndPoint != value))
				{
					this.OnEndPointChanging(value);
					this.SendPropertyChanging();
					this._EndPoint = value;
					this.SendPropertyChanged("EndPoint");
					this.OnEndPointChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SerchExpResult
	{
		
		private string _ID;
		
		private string _PID;
		
		private System.Nullable<double> _DJ电极端面直径;
		
		private System.Nullable<double> _JY加压时间;
		
		private System.Nullable<double> _HJ焊接电流;
		
		private System.Nullable<double> _HJ焊接时间;
		
		private System.Nullable<double> _WC维持时间;
		
		private System.Nullable<double> _DJ电极压力;
		
		private System.Nullable<double> _HD焊点直径;
		
		private System.Nullable<double> _HH熔核直径;
		
		private System.Nullable<double> _ZH总厚度;
		
		private string _BZ备注;
		
		private System.Nullable<System.DateTime> _TDate;
		
		public SerchExpResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="VarChar(128)")]
		public string PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极端面直径", DbType="Float")]
		public System.Nullable<double> DJ电极端面直径
		{
			get
			{
				return this._DJ电极端面直径;
			}
			set
			{
				if ((this._DJ电极端面直径 != value))
				{
					this._DJ电极端面直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JY加压时间", DbType="Float")]
		public System.Nullable<double> JY加压时间
		{
			get
			{
				return this._JY加压时间;
			}
			set
			{
				if ((this._JY加压时间 != value))
				{
					this._JY加压时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接电流", DbType="Float")]
		public System.Nullable<double> HJ焊接电流
		{
			get
			{
				return this._HJ焊接电流;
			}
			set
			{
				if ((this._HJ焊接电流 != value))
				{
					this._HJ焊接电流 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HJ焊接时间", DbType="Float")]
		public System.Nullable<double> HJ焊接时间
		{
			get
			{
				return this._HJ焊接时间;
			}
			set
			{
				if ((this._HJ焊接时间 != value))
				{
					this._HJ焊接时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WC维持时间", DbType="Float")]
		public System.Nullable<double> WC维持时间
		{
			get
			{
				return this._WC维持时间;
			}
			set
			{
				if ((this._WC维持时间 != value))
				{
					this._WC维持时间 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DJ电极压力", DbType="Float")]
		public System.Nullable<double> DJ电极压力
		{
			get
			{
				return this._DJ电极压力;
			}
			set
			{
				if ((this._DJ电极压力 != value))
				{
					this._DJ电极压力 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HD焊点直径", DbType="Float")]
		public System.Nullable<double> HD焊点直径
		{
			get
			{
				return this._HD焊点直径;
			}
			set
			{
				if ((this._HD焊点直径 != value))
				{
					this._HD焊点直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HH熔核直径", DbType="Float")]
		public System.Nullable<double> HH熔核直径
		{
			get
			{
				return this._HH熔核直径;
			}
			set
			{
				if ((this._HH熔核直径 != value))
				{
					this._HH熔核直径 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZH总厚度", DbType="Float")]
		public System.Nullable<double> ZH总厚度
		{
			get
			{
				return this._ZH总厚度;
			}
			set
			{
				if ((this._ZH总厚度 != value))
				{
					this._ZH总厚度 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BZ备注", DbType="NVarChar(255)")]
		public string BZ备注
		{
			get
			{
				return this._BZ备注;
			}
			set
			{
				if ((this._BZ备注 != value))
				{
					this._BZ备注 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TDate
		{
			get
			{
				return this._TDate;
			}
			set
			{
				if ((this._TDate != value))
				{
					this._TDate = value;
				}
			}
		}
	}
	
	public partial class NewSportDataResult
	{
		
		private string _Column1;
		
		public NewSportDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(4000)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class NewExpResult
	{
		
		private string _Column1;
		
		public NewExpResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(4000)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class NewBoardDataResult
	{
		
		private string _Column1;
		
		public NewBoardDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(4000)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RX_DataUpdata
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RXYF_YECC")]
	public partial class MSDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    #endregion
		
		public MSDDataContext() : 
				base(global::RX_DataUpdata.Properties.Settings.Default.RXYF_YECCConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public MSDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MSDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddRuleProductAndUser")]
		public int AddRuleProductAndUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProduceID", DbType="NVarChar(128)")] string produceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), produceID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpRuleData")]
		public int UpRuleData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(10)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(10)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Context", DbType="VarChar(MAX)")] string context, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PassageID", DbType="NVarChar(128)")] string passageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title, category, context, passageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckPassword")]
		public int CheckPassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(MAX)")] ref string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, password);
			password = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckUserName")]
		public int CheckUserName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CUserName", DbType="NVarChar(128)")] string cUserName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cUserName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatExperience")]
		public int CreatExperience([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(128)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(MAX)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Analysis", DbType="NVarChar(MAX)")] string analysis, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(128)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string summary)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, title, reason, analysis, category, summary);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatStockAndUserData")]
		public int CreatStockAndUserData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductionID", DbType="NVarChar(128)")] string productionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productionID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatStockAndUserStockData")]
		public int CreatStockAndUserStockData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LOCKID", DbType="NVarChar(128)")] string lOCKID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(128)")] string productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lOCKID, productID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatStockInformationAndUserData")]
		public int CreatStockInformationAndUserData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockId", DbType="NVarChar(128)")] string lockId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="NVarChar(128)")] string userId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lockId, userId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatStockProduct")]
		public int CreatStockProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductImage", DbType="VarChar(128)")] string productImage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCategory", DbType="NVarChar(128)")] string productCategory, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllNumber", DbType="NVarChar(128)")] string allNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductStatus", DbType="NVarChar(128)")] string productStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProducName", DbType="NVarChar(128)")] string producName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Introduce", DbType="NVarChar(128)")] string introduce, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productImage, productCategory, allNumber, productStatus, producName, introduce, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatUserAndExperienceData")]
		public int CreatUserAndExperienceData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProduceID", DbType="NVarChar(128)")] string produceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), produceID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreatUserStock")]
		public int CreatUserStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockProductNo", DbType="NVarChar(128)")] string lockProductNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Introduce", DbType="NVarChar(128)")] string introduce, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="NVarChar(128)")] string productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lockProductNo, introduce, productID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteExperience")]
		public int DeleteExperience([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="NVarChar(128)")] string iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteRulePassage")]
		public int DeleteRulePassage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PassageID", DbType="NVarChar(128)")] string passageID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), passageID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStockData")]
		public int DeleteStockData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="NVarChar(128)")] string productId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.deleteUserStock")]
		public int deleteUserStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockId", DbType="NVarChar(128)")] string lockId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lockId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRoleID")]
		public int GetRoleID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleName", DbType="NVarChar(256)")] string userRoleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserRoleID", DbType="Int")] ref System.Nullable<int> userRoleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userRoleName, userRoleID);
			userRoleID = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertRuleProduce")]
		public int InsertRuleProduce([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(10)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(10)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Context", DbType="VarChar(MAX)")] string context, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Level", DbType="NVarChar(128)")] string level, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title, category, context, level, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SerchDataForInfromation")]
		public ISingleResult<SerchDataForInfromationResult> SerchDataForInfromation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="NVarChar(128)")] string iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(50)")] ref string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Context", DbType="NVarChar(999)")] ref string context)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, title, context);
			title = ((string)(result.GetParameterValue(1)));
			context = ((string)(result.GetParameterValue(2)));
			return ((ISingleResult<SerchDataForInfromationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdataExperience")]
		public int UpdataExperience([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PassageId", DbType="NVarChar(128)")] string passageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="NVarChar(128)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="NVarChar(MAX)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Analysis", DbType="NVarChar(MAX)")] string analysis, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category", DbType="NVarChar(128)")] string category)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), passageId, title, reason, analysis, category);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStockData")]
		public int UpdateStockData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductId", DbType="NVarChar(128)")] string productId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductImage", DbType="NVarChar(450)")] string productImage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductCategory", DbType="NVarChar(128)")] string productCategory, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AllNumber", DbType="NVarChar(128)")] string allNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductStatus", DbType="NVarChar(128)")] string productStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProducName", DbType="NVarChar(128)")] string producName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Introduce", DbType="NVarChar(128)")] string introduce)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productId, productImage, productCategory, allNumber, productStatus, producName, introduce);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUserStock")]
		public int UpdateUserStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockProductNo", DbType="NVarChar(128)")] string lockProductNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Introduce", DbType="NVarChar(128)")] string introduce, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LockId", DbType="NVarChar(128)")] string lockId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lockProductNo, introduce, lockId);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class SerchDataForInfromationResult
	{
		
		private string _Context;
		
		public SerchDataForInfromationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NChar(10)")]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this._Context = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

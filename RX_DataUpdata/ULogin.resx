<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAAFFdQAASHgAAE59AA9NegAeVHsAIlh+ADhhfQAAUoAAAFaDAABW
        hQAMVYMACViFAAdaiAACXIgABlyKAAxciQATV4MAHF2IACZcgQAXZI4AHWCJAAVikAAFZ5UADmSRAANq
        mAADbZ4ABm+dABt1nwAoY4wAP2aBADp5mgACbKAAC3WiAAx0pQAAdKkAC3qsAA17rAAJfq4AD3ytABJy
        ogAYdqIAHnihABN5qAAVeagAB3+wACF2oAAifqoARGmEAFtvggBSepMAYHmOAGl/kQAehK4AAoGyAAeF
        tAANiLYAGIOyAB2HtAARi7kALIKpADiCpwAwgagAOImwAC+QugA+kLUAOZa+AF2IngB9hI0AbICRAHKN
        nQB1jp8AQpe9AEiZvABjla4AeJGgAGuetQA1m8QAHr77ACCt4gAmsOMALLLkADG15gA4t+gAPrvpACO/
        +QBNpMgASqrOAFGjxgBdpMUAVqjJAFatzwBUrdAAWa7QAFew0gBdsdEAXbTVAGmqxgBnrssAaKzKAHWx
        ywB9t84AYbHRAG230wBmutkAa7vZAGu92wBsvNsAb77cAHC10QB6uNEAcb7cAHm92gB+v9sAQ7fjAEW3
        4wBJueMATbvjAEO+6wBRvOMAVL3jAFa+5ABYvuQAI8D7ACfB/AAtxPwAMMT7ADbG+wAyxv0AOMj+AD3I
        /QA/zP8Af8DYAH3B3wBKwOwATsPuAFPF7wBFyvwAQc3/AETN/gBJz/8ATs79AEzQ/wBS0v8AUtX/AFbV
        /wBY0v8AXdL+AFnW/wBd1v8AX9j/AG7A4QB+w+AAesbiAH3H4gB+zu0AYtb/AGXV/gBr1/8AYdj/AGbY
        /wBq2f8Abtj/AHHa/wB22v8Actz/AHXc/wB72v0Aet3/AHzc/wB84P8AhL7ZAIrE3ACOx+EAg8rlAIPO
        6gCFzekAis/pAJHM5ACYzuUAj9DpAJHS6wCU0ekAkNPtAJXV7gCO1/IAht3+AI3d+wCQ1/IAlNbwAJbY
        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
</value>
  </data>
</root>